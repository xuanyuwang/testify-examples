// Code generated by mockery v2.50.1. DO NOT EDIT.

package mockandsubtest

import mock "github.com/stretchr/testify/mock"

// MockExternalService is an autogenerated mock type for the ExternalService type
type MockExternalService struct {
	mock.Mock
}

type MockExternalService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockExternalService) EXPECT() *MockExternalService_Expecter {
	return &MockExternalService_Expecter{mock: &_m.Mock}
}

// Work provides a mock function with no fields
func (_m *MockExternalService) Work() {
	_m.Called()
}

// MockExternalService_Work_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Work'
type MockExternalService_Work_Call struct {
	*mock.Call
}

// Work is a helper method to define mock.On call
func (_e *MockExternalService_Expecter) Work() *MockExternalService_Work_Call {
	return &MockExternalService_Work_Call{Call: _e.mock.On("Work")}
}

func (_c *MockExternalService_Work_Call) Run(run func()) *MockExternalService_Work_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockExternalService_Work_Call) Return() *MockExternalService_Work_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockExternalService_Work_Call) RunAndReturn(run func()) *MockExternalService_Work_Call {
	_c.Run(run)
	return _c
}

// NewMockExternalService creates a new instance of MockExternalService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockExternalService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockExternalService {
	mock := &MockExternalService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
